#!/usr/bin/env node
require('newrelic');
var config    = require('taut.shared/config');
var debug     = require('taut.shared/debug')();
var app       = require('../app');
var io        = require('../io');

var http       = require('http');
var Promise   = require('bluebird');

var port = process.env.PORT || config.concourse.port;

var server = http.createServer(app);
io.attach(server);

server.listen(port, function () {
	debug('Express server listening at http://127.0.0.1:' + server.address().port);
});

var terminating = false;
var shutdown = function () {
	if (terminating) return;
	terminating = true;
	debug('Process is terminating, stopping server and finishing requests');
	server.close(function () {
		debug('Server halted');

		var promises = [];
		process.emit('graceful stop', promises);

		Promise.settle(promises).then(function () {
			debug('Shutdown');
			process.exit(0); // eslint-disable-line no-process-exit
		});
	});

	setTimeout(function () {
		debug('Shutdown took too long, terminating.');
		process.exit(0); // eslint-disable-line no-process-exit
	}, 2000);
};

process.on('SIGUSR2', shutdown);
process.on('SIGTERM', shutdown);
process.on('SIGINT', shutdown);
process.graceful = shutdown;
